# Directiva
name: Deploy to server

#Definir evento o lista de eventos con la directiva on:
on: push

jobs:
  #Definir un identificador para el job, funciona como id
  first_job:
    #Decalrar con name: "", un nombre para mostrar en git
    #Definir sistema operativo o Maquina virtual asociada
    runs-on: ubuntu-latest

    #forma para comunicar info entre jobs, se hace referencia a lo que este aca desde el otro job
    outputs:
      salida: ${{ steps.step_1.outputs.my_variable }}

    #variables de entorno
    env:
      #nombre variable : valor
      NAME: VariableGlobal

    steps:
    #Empiezan con un -
    #Puede ejecutar comando o acciones
    - name: Working dir
      id: step_1
      #Variable de entorno que contiene un archivo que permite insertar o concatenar valores que se pueden leer dentro de otros steps o valores
      run: echo "my_variable=Hola Mundo" >> $GITHUB_OUTPUT #Guarda variable my_variable que tiene su valor dentro del output

      #para usar variable que esta en el output
    - name: Obtener mensaje
      #al llamar a un step, hay que definirle un ID al step para poder llamarlo
      run: echo "${{ steps.step_1.outputs.my_variable }}" #de esta fomra se llama a la variable definida en un step anterior guardada en output

      #Esta forma de compartir funciona solo en comunicacion a nivel JOB, no se puede comuncar con otro job
    
  second_jobs:
    #Condicionales
    #Utilizar contexto para condicionar
    if: ${{ github.ref == 'refs/heads/main' }}
    # se indica que second jobs se necesita que se haya completado needs, por lo que hace que se ejecuten secuencialmente, no paralelamente
    needs: first_job
    #Definir MC, cada job necesita su propia definicion
    runs-on: ubuntu-latest

    env:
      #utiliza action para obtener informacion de lo definido en los needs del job, que es first job, luego se llama a output del fist job, y ahi se almacena la salida
      SALIDA: ${{ needs.first_job.outputs.salida }} 

    steps:
    - name: Hola Mundo
      run: echo "#SALIDA"

      #usar ACTION (chekout, situarte donde esta la accion)
    - name: Action
      #nombre de la accion: 1. nombre del repo de quien crea la accion, 2. nombre de la accion, 3. @version
      uses: actions/checkout@v4
      #Para usar parametros
      #with:
    
   

    


    